
./Debug/flipflop_irq.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 #define NVIC_IABR0 ((unsigned short *) (NVIC_BASE + 0x200))
 
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f888 	bl	20000118 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <irq_handler>:

unsigned char count;

void irq_handler(void)
{
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
    if((*SCB_ICSR & (1 << 3)) != 0)
20000014:	4b0a      	ldr	r3, [pc, #40]	; (20000040 <irq_handler+0x30>)
20000016:	781b      	ldrb	r3, [r3, #0]
20000018:	001a      	movs	r2, r3
2000001a:	2308      	movs	r3, #8
2000001c:	4013      	ands	r3, r2
2000001e:	d00b      	beq.n	20000038 <irq_handler+0x28>
    {
        count += 1;
20000020:	4b08      	ldr	r3, [pc, #32]	; (20000044 <irq_handler+0x34>)
20000022:	781b      	ldrb	r3, [r3, #0]
20000024:	3301      	adds	r3, #1
20000026:	b2da      	uxtb	r2, r3
20000028:	4b06      	ldr	r3, [pc, #24]	; (20000044 <irq_handler+0x34>)
2000002a:	701a      	strb	r2, [r3, #0]
        
        *EXTI_PR |= (1 << 3);
2000002c:	4b06      	ldr	r3, [pc, #24]	; (20000048 <irq_handler+0x38>)
2000002e:	681a      	ldr	r2, [r3, #0]
20000030:	4b05      	ldr	r3, [pc, #20]	; (20000048 <irq_handler+0x38>)
20000032:	2108      	movs	r1, #8
20000034:	430a      	orrs	r2, r1
20000036:	601a      	str	r2, [r3, #0]
    }
}
20000038:	46c0      	nop			; (mov r8, r8)
2000003a:	46bd      	mov	sp, r7
2000003c:	bd80      	pop	{r7, pc}
2000003e:	46c0      	nop			; (mov r8, r8)
20000040:	e000ed04 	and	lr, r0, r4, lsl #26
20000044:	20000138 	andcs	r0, r0, r8, lsr r1
20000048:	40013c14 	andmi	r3, r1, r4, lsl ip

2000004c <app_init>:

void app_init(void)
{
2000004c:	b580      	push	{r7, lr}
2000004e:	af00      	add	r7, sp, #0
    count = 2;
20000050:	4b22      	ldr	r3, [pc, #136]	; (200000dc <app_init+0x90>)
20000052:	2202      	movs	r2, #2
20000054:	701a      	strb	r2, [r3, #0]
    
    #ifdef USBDM
    *((unsigned long *) 0x40023830) = 0x18;
20000056:	4b22      	ldr	r3, [pc, #136]	; (200000e0 <app_init+0x94>)
20000058:	2218      	movs	r2, #24
2000005a:	601a      	str	r2, [r3, #0]
    __asm volatile("LDR R0,=0x08000209\n BLX R0 \n");
2000005c:	4835      	ldr	r0, [pc, #212]	; (20000134 <main+0x1c>)
2000005e:	4780      	blx	r0
    *((unsigned long *) 0x40023844) |= 0x4000;
20000060:	4b20      	ldr	r3, [pc, #128]	; (200000e4 <app_init+0x98>)
20000062:	681a      	ldr	r2, [r3, #0]
20000064:	4b1f      	ldr	r3, [pc, #124]	; (200000e4 <app_init+0x98>)
20000066:	2180      	movs	r1, #128	; 0x80
20000068:	01c9      	lsls	r1, r1, #7
2000006a:	430a      	orrs	r2, r1
2000006c:	601a      	str	r2, [r3, #0]
    *((unsigned long *) 0xE000ED08) = 0x2001C000;
2000006e:	4b1e      	ldr	r3, [pc, #120]	; (200000e8 <app_init+0x9c>)
20000070:	4a1e      	ldr	r2, [pc, #120]	; (200000ec <app_init+0xa0>)
20000072:	601a      	str	r2, [r3, #0]
    #endif
    
    *PORT_D_MODER = 0x5555;
20000074:	4b1e      	ldr	r3, [pc, #120]	; (200000f0 <app_init+0xa4>)
20000076:	4a1f      	ldr	r2, [pc, #124]	; (200000f4 <app_init+0xa8>)
20000078:	801a      	strh	r2, [r3, #0]
    
    *SYSCFG_EXTICR1 &= ~0xF000;
2000007a:	4b1f      	ldr	r3, [pc, #124]	; (200000f8 <app_init+0xac>)
2000007c:	681a      	ldr	r2, [r3, #0]
2000007e:	4b1e      	ldr	r3, [pc, #120]	; (200000f8 <app_init+0xac>)
20000080:	491e      	ldr	r1, [pc, #120]	; (200000fc <app_init+0xb0>)
20000082:	400a      	ands	r2, r1
20000084:	601a      	str	r2, [r3, #0]
    *SYSCFG_EXTICR1 |= 0x4000;
20000086:	4b1c      	ldr	r3, [pc, #112]	; (200000f8 <app_init+0xac>)
20000088:	681a      	ldr	r2, [r3, #0]
2000008a:	4b1b      	ldr	r3, [pc, #108]	; (200000f8 <app_init+0xac>)
2000008c:	2180      	movs	r1, #128	; 0x80
2000008e:	01c9      	lsls	r1, r1, #7
20000090:	430a      	orrs	r2, r1
20000092:	601a      	str	r2, [r3, #0]
    
    *EXTI_IMR |= (1 << 3);
20000094:	4b1a      	ldr	r3, [pc, #104]	; (20000100 <app_init+0xb4>)
20000096:	681a      	ldr	r2, [r3, #0]
20000098:	4b19      	ldr	r3, [pc, #100]	; (20000100 <app_init+0xb4>)
2000009a:	2108      	movs	r1, #8
2000009c:	430a      	orrs	r2, r1
2000009e:	601a      	str	r2, [r3, #0]
    *EXTI_RTSR |= (1 << 3);
200000a0:	4b18      	ldr	r3, [pc, #96]	; (20000104 <app_init+0xb8>)
200000a2:	681a      	ldr	r2, [r3, #0]
200000a4:	4b17      	ldr	r3, [pc, #92]	; (20000104 <app_init+0xb8>)
200000a6:	2108      	movs	r1, #8
200000a8:	430a      	orrs	r2, r1
200000aa:	601a      	str	r2, [r3, #0]
    *EXTI_FTSR &= ~(1 << 3);
200000ac:	4b16      	ldr	r3, [pc, #88]	; (20000108 <app_init+0xbc>)
200000ae:	681a      	ldr	r2, [r3, #0]
200000b0:	4b15      	ldr	r3, [pc, #84]	; (20000108 <app_init+0xbc>)
200000b2:	2108      	movs	r1, #8
200000b4:	438a      	bics	r2, r1
200000b6:	601a      	str	r2, [r3, #0]
    
    *SCB_VTOR = INTERRUPT_VECTOR;
200000b8:	4b0b      	ldr	r3, [pc, #44]	; (200000e8 <app_init+0x9c>)
200000ba:	4a0c      	ldr	r2, [pc, #48]	; (200000ec <app_init+0xa0>)
200000bc:	601a      	str	r2, [r3, #0]
    *((void (**) (void)) (INTERRUPT_VECTOR + 0x64)) = irq_handler;
200000be:	4b13      	ldr	r3, [pc, #76]	; (2000010c <app_init+0xc0>)
200000c0:	4a13      	ldr	r2, [pc, #76]	; (20000110 <app_init+0xc4>)
200000c2:	601a      	str	r2, [r3, #0]
    
    *NVIC_ISER0 |= (1 << 9);
200000c4:	4b13      	ldr	r3, [pc, #76]	; (20000114 <app_init+0xc8>)
200000c6:	881b      	ldrh	r3, [r3, #0]
200000c8:	4912      	ldr	r1, [pc, #72]	; (20000114 <app_init+0xc8>)
200000ca:	2280      	movs	r2, #128	; 0x80
200000cc:	0092      	lsls	r2, r2, #2
200000ce:	4313      	orrs	r3, r2
200000d0:	b29b      	uxth	r3, r3
200000d2:	800b      	strh	r3, [r1, #0]
}
200000d4:	46c0      	nop			; (mov r8, r8)
200000d6:	46bd      	mov	sp, r7
200000d8:	bd80      	pop	{r7, pc}
200000da:	46c0      	nop			; (mov r8, r8)
200000dc:	20000138 	andcs	r0, r0, r8, lsr r1
200000e0:	40023830 	andmi	r3, r2, r0, lsr r8
200000e4:	40023844 	andmi	r3, r2, r4, asr #16
200000e8:	e000ed08 	and	lr, r0, r8, lsl #26
200000ec:	2001c000 	andcs	ip, r1, r0
200000f0:	40020c00 	andmi	r0, r2, r0, lsl #24
200000f4:	00005555 	andeq	r5, r0, r5, asr r5
200000f8:	40013808 	andmi	r3, r1, r8, lsl #16
200000fc:	ffff0fff 			; <UNDEFINED> instruction: 0xffff0fff
20000100:	40013c00 	andmi	r3, r1, r0, lsl #24
20000104:	40013c08 	andmi	r3, r1, r8, lsl #24
20000108:	40013c0c 	andmi	r3, r1, ip, lsl #24
2000010c:	2001c064 	andcs	ip, r1, r4, rrx
20000110:	20000011 	andcs	r0, r0, r1, lsl r0
20000114:	e000e100 	and	lr, r0, r0, lsl #2

20000118 <main>:

void main(void)
{
20000118:	b580      	push	{r7, lr}
2000011a:	af00      	add	r7, sp, #0
    app_init();
2000011c:	f7ff ff96 	bl	2000004c <app_init>
    
    while(1)
    {
        *PORT_D_ODR = count;
20000120:	4a02      	ldr	r2, [pc, #8]	; (2000012c <main+0x14>)
20000122:	4b03      	ldr	r3, [pc, #12]	; (20000130 <main+0x18>)
20000124:	781b      	ldrb	r3, [r3, #0]
20000126:	7013      	strb	r3, [r2, #0]
20000128:	e7fa      	b.n	20000120 <main+0x8>
2000012a:	46c0      	nop			; (mov r8, r8)
2000012c:	40020c14 	andmi	r0, r2, r4, lsl ip
20000130:	20000138 	andcs	r0, r0, r8, lsr r1
20000134:	08000209 	stmdaeq	r0, {r0, r3, r9}

20000138 <count>:
20000138:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	0000007e 	andeq	r0, r0, lr, ror r0
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	0000005a 	andeq	r0, r0, sl, asr r0
  10:	00000c0c 	andeq	r0, r0, ip, lsl #24
  14:	0000e100 	andeq	lr, r0, r0, lsl #2
	...
  24:	00db0200 	sbcseq	r0, fp, r0, lsl #4
  28:	2f010000 	svccs	0x00010000
  2c:	00000036 	andeq	r0, r0, r6, lsr r0
  30:	01380305 	teqeq	r8, r5, lsl #6
  34:	01032000 	mrseq	r2, (UNDEF: 3)
  38:	00012508 	andeq	r2, r1, r8, lsl #10
  3c:	013c0400 	teqeq	ip, r0, lsl #8
  40:	55010000 	strpl	r0, [r1, #-0]
  44:	20000118 	andcs	r0, r0, r8, lsl r1
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	33059c01 	movwcc	r9, #23553	; 0x5c01
  50:	01000001 	tsteq	r0, r1
  54:	00004c3b 	andeq	r4, r0, fp, lsr ip
  58:	0000cc20 	andeq	ip, r0, r0, lsr #24
  5c:	059c0100 	ldreq	r0, [ip, #256]	; 0x100
  60:	00000000 	andeq	r0, r0, r0
  64:	00103101 	andseq	r3, r0, r1, lsl #2
  68:	003c2000 	eorseq	r2, ip, r0
  6c:	9c010000 	stcls	0, cr0, [r1], {-0}
  70:	00014105 	andeq	r4, r1, r5, lsl #2
  74:	00270100 	eoreq	r0, r7, r0, lsl #2
  78:	0c200000 	stceq	0, cr0, [r0], #-0
  7c:	01000000 	mrseq	r0, (UNDEF: 0)
  80:	Address 0x00000080 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  18:	0b3b0b3a 	bleq	ec2d08 <startup-0x1f13d2f8>
  1c:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
  20:	00001802 	andeq	r1, r0, r2, lsl #16
  24:	0b002403 	bleq	9038 <startup-0x1fff6fc8>
  28:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  2c:	0400000e 	streq	r0, [r0], #-14
  30:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  34:	0b3a0e03 	bleq	e83848 <startup-0x1f17c7b8>
  38:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  3c:	06120111 			; <UNDEFINED> instruction: 0x06120111
  40:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  44:	05000019 	streq	r0, [r0, #-25]	; 0xffffffe7
  48:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  4c:	0b3a0e03 	bleq	e83860 <startup-0x1f17c7a0>
  50:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  54:	06120111 			; <UNDEFINED> instruction: 0x06120111
  58:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  5c:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000124 	andeq	r0, r0, r4, lsr #2
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000134 	andcs	r0, r0, r4, lsr r1
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000aa 	andeq	r0, r0, sl, lsr #1
   4:	00640002 	rsbeq	r0, r4, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	5a010000 	bpl	40020 <startup-0x1ffbffe0>
  1c:	55472f3a 	strbpl	r2, [r7, #-3898]	; 0xfffff0c6
  20:	5449442f 	strbpl	r4, [r9], #-1071	; 0xfffffbd1
  24:	20313531 	eorscs	r3, r1, r1, lsr r5
  28:	614d202d 	cmpvs	sp, sp, lsr #32
  2c:	6e696b73 	vmovvs.8	d9[7], r6
  30:	6569726f 	strbvs	r7, [r9, #-623]!	; 0xfffffd91
  34:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
  38:	50206461 	eorpl	r6, r0, r1, ror #8
  3c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
  40:	656d6d61 	strbvs	r6, [sp, #-3425]!	; 0xfffff29f
  44:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
  48:	646f432f 	strbtvs	r4, [pc], #-815	; 50 <startup-0x1fffffb0>
  4c:	74694c65 	strbtvc	r4, [r9], #-3173	; 0xfffff39b
  50:	6c662f65 	stclvs	15, cr2, [r6], #-404	; 0xfffffe6c
  54:	6c667069 	stclvs	0, cr7, [r6], #-420	; 0xfffffe5c
  58:	695f706f 	ldmdbvs	pc, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
  5c:	00007172 	andeq	r7, r0, r2, ror r1
  60:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  64:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  68:	00010063 	andeq	r0, r1, r3, rrx
  6c:	05000000 	streq	r0, [r0, #-0]
  70:	00000002 	andeq	r0, r0, r2
  74:	01270320 			; <UNDEFINED> instruction: 0x01270320
  78:	2f212113 	svccs	0x00212113
  7c:	00030221 	andeq	r0, r3, r1, lsr #4
  80:	05000101 	streq	r0, [r0, #-257]	; 0xfffffeff
  84:	00001002 	andeq	r1, r0, r2
  88:	01310320 	teqeq	r1, r0, lsr #6
  8c:	6868682f 	stmdavs	r8!, {r0, r1, r2, r3, r5, fp, sp, lr}^
  90:	3d3f2fa1 	ldccc	15, cr2, [pc, #-644]!	; fffffe14 <count+0xdffffcdc>
  94:	3e3f752f 	cdpcc	5, 3, cr7, cr15, cr15, {1}
  98:	67677667 	strbvs	r7, [r7, -r7, ror #12]!
  9c:	833e3d68 	teqhi	lr, #104, 26	; 0x1a00
  a0:	2f152202 	svccs	0x00152202
  a4:	01040200 	mrseq	r0, R12_usr
  a8:	000c0232 	andeq	r0, ip, r2, lsr r2
  ac:	Address 0x000000ac is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	5f717269 	svcpl	0x00717269
   4:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
   8:	0072656c 	rsbseq	r6, r2, ip, ror #10
   c:	472f3a5a 			; <UNDEFINED> instruction: 0x472f3a5a
  10:	49442f55 	stmdbmi	r4, {r0, r2, r4, r6, r8, r9, sl, fp, sp}^
  14:	31353154 	teqcc	r5, r4, asr r1
  18:	4d202d20 	stcmi	13, cr2, [r0, #-128]!	; 0xffffff80
  1c:	696b7361 	stmdbvs	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  20:	69726f6e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  24:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
  28:	20646172 	rsbcs	r6, r4, r2, ror r1
  2c:	676f7250 			; <UNDEFINED> instruction: 0x676f7250
  30:	6d6d6172 	stfvse	f6, [sp, #-456]!	; 0xfffffe38
  34:	6e697265 	cdpvs	2, 6, cr7, cr9, cr5, {3}
  38:	6f432f67 	svcvs	0x00432f67
  3c:	694c6564 	stmdbvs	ip, {r2, r5, r6, r8, sl, sp, lr}^
  40:	662f6574 			; <UNDEFINED> instruction: 0x662f6574
  44:	6670696c 	ldrbtvs	r6, [r0], -ip, ror #18
  48:	5f706f6c 	svcpl	0x00706f6c
  4c:	2f717269 	svccs	0x00717269
  50:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  54:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  58:	4e470063 	cdpmi	0, 4, cr0, cr7, cr3, {3}
  5c:	39432055 	stmdbcc	r3, {r0, r2, r4, r6, sp}^
  60:	2e372039 	mrccs	0, 1, r2, cr7, cr9, {1}
  64:	20312e32 	eorscs	r2, r1, r2, lsr lr
  68:	37313032 			; <UNDEFINED> instruction: 0x37313032
  6c:	34303930 	ldrtcc	r3, [r0], #-2352	; 0xfffff6d0
  70:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  74:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  78:	5b202965 	blpl	80a614 <startup-0x1f7f59ec>
  7c:	2f4d5241 	svccs	0x004d5241
  80:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  84:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  88:	622d372d 	eorvs	r3, sp, #11796480	; 0xb40000
  8c:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  90:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  94:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  98:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  9c:	30323535 	eorscc	r3, r2, r5, lsr r5
  a0:	2d205d34 	stccs	13, cr5, [r0, #-208]!	; 0xffffff30
  a4:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
  a8:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
  ac:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  b0:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  b4:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
  b8:	6d2d206d 	stcvs	0, cr2, [sp, #-436]!	; 0xfffffe4c
  bc:	616f6c66 	cmnvs	pc, r6, ror #24
  c0:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
  c4:	6f733d69 	svcvs	0x00733d69
  c8:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
  cc:	4f2d2067 	svcmi	0x002d2067
  d0:	732d2030 			; <UNDEFINED> instruction: 0x732d2030
  d4:	633d6474 	teqvs	sp, #116, 8	; 0x74000000
  d8:	63003939 	movwvs	r3, #2361	; 0x939
  dc:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
  e0:	5c3a5a00 			; <UNDEFINED> instruction: 0x5c3a5a00
  e4:	445c5547 	ldrbmi	r5, [ip], #-1351	; 0xfffffab9
  e8:	35315449 	ldrcc	r5, [r1, #-1097]!	; 0xfffffbb7
  ec:	202d2031 	eorcs	r2, sp, r1, lsr r0
  f0:	6b73614d 	blvs	1cd862c <startup-0x1e3279d4>
  f4:	726f6e69 	rsbvc	r6, pc, #1680	; 0x690
  f8:	746e6569 	strbtvc	r6, [lr], #-1385	; 0xfffffa97
  fc:	64617265 	strbtvs	r7, [r1], #-613	; 0xfffffd9b
 100:	6f725020 	svcvs	0x00725020
 104:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
 108:	6972656d 	ldmdbvs	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
 10c:	435c676e 	cmpmi	ip, #28835840	; 0x1b80000
 110:	4c65646f 	cfstrdmi	mvd6, [r5], #-444	; 0xfffffe44
 114:	5c657469 	cfstrdpl	mvd7, [r5], #-420	; 0xfffffe5c
 118:	70696c66 	rsbvc	r6, r9, r6, ror #24
 11c:	706f6c66 	rsbvc	r6, pc, r6, ror #24
 120:	7172695f 	cmnvc	r2, pc, asr r9
 124:	736e7500 	cmnvc	lr, #0, 10
 128:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 12c:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 130:	61007261 	tstvs	r0, r1, ror #4
 134:	695f7070 	ldmdbvs	pc, {r4, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
 138:	0074696e 	rsbseq	r6, r4, lr, ror #18
 13c:	6e69616d 	powvsez	f6, f1, #5.0
 140:	61747300 	cmnvs	r4, r0, lsl #6
 144:	70757472 	rsbsvc	r7, r5, r2, ror r4
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d37 	eorscc	r2, r2, r7, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3720 	eorcc	r3, lr, #32, 14	; 0x800000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	30373130 	eorscc	r3, r7, r0, lsr r1
  48:	20343039 	eorscs	r3, r4, r9, lsr r0
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff30e <count+0xdffff1d6>
  5c:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
  60:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  64:	72622d37 	rsbvc	r2, r2, #3520	; 0xdc0
  68:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  6c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  70:	6f697369 	svcvs	0x00697369
  74:	3532206e 	ldrcc	r2, [r2, #-110]!	; 0xffffff92
  78:	34303235 	ldrtcc	r3, [r0], #-565	; 0xfffffdcb
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	0000003c 	andeq	r0, r0, ip, lsr r0
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0000070d 	andeq	r0, r0, sp, lsl #14
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	2000004c 	andcs	r0, r0, ip, asr #32
  48:	000000cc 	andeq	r0, r0, ip, asr #1
  4c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  50:	41018e02 	tstmi	r1, r2, lsl #28
  54:	0000070d 	andeq	r0, r0, sp, lsl #14
  58:	00000018 	andeq	r0, r0, r8, lsl r0
  5c:	00000000 	andeq	r0, r0, r0
  60:	20000118 	andcs	r0, r0, r8, lsl r1
  64:	0000001c 	andeq	r0, r0, ip, lsl r0
  68:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  6c:	41018e02 	tstmi	r1, r2, lsl #28
  70:	0000070d 	andeq	r0, r0, sp, lsl #14
