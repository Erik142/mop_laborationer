
./Debug/keypad.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 unsigned char* display_out = ( (unsigned char *) 0x40020C14);
 
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f896 	bl	20000134 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <app_init>:

void app_init(void)
{
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
    * ( (unsigned int *) 0x40020C00) &= 0x00FF0000;
20000014:	4b0a      	ldr	r3, [pc, #40]	; (20000040 <app_init+0x30>)
20000016:	6819      	ldr	r1, [r3, #0]
20000018:	4b09      	ldr	r3, [pc, #36]	; (20000040 <app_init+0x30>)
2000001a:	22ff      	movs	r2, #255	; 0xff
2000001c:	0412      	lsls	r2, r2, #16
2000001e:	400a      	ands	r2, r1
20000020:	601a      	str	r2, [r3, #0]
    * ( (unsigned int *) 0x40020C00) |= 0x55005555;   // Configure port D bit 15-12, 7-0 as output
20000022:	4b07      	ldr	r3, [pc, #28]	; (20000040 <app_init+0x30>)
20000024:	681a      	ldr	r2, [r3, #0]
20000026:	4b06      	ldr	r3, [pc, #24]	; (20000040 <app_init+0x30>)
20000028:	4906      	ldr	r1, [pc, #24]	; (20000044 <app_init+0x34>)
2000002a:	430a      	orrs	r2, r1
2000002c:	601a      	str	r2, [r3, #0]
    * ( (unsigned char *) 0x40020C05) = 0;         // Configure port D GPIO_OTYPER
2000002e:	4b06      	ldr	r3, [pc, #24]	; (20000048 <app_init+0x38>)
20000030:	2200      	movs	r2, #0
20000032:	701a      	strb	r2, [r3, #0]
    * ( (unsigned short *) 0x40020C0E) = 0xAA;    // Configure port D GPIO_PUPDR
20000034:	4b05      	ldr	r3, [pc, #20]	; (2000004c <app_init+0x3c>)
20000036:	22aa      	movs	r2, #170	; 0xaa
20000038:	801a      	strh	r2, [r3, #0]
}
2000003a:	46c0      	nop			; (mov r8, r8)
2000003c:	46bd      	mov	sp, r7
2000003e:	bd80      	pop	{r7, pc}
20000040:	40020c00 	andmi	r0, r2, r0, lsl #24
20000044:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab
20000048:	40020c05 	andmi	r0, r2, r5, lsl #24
2000004c:	40020c0e 	andmi	r0, r2, lr, lsl #24

20000050 <keyb>:

unsigned char keyb(void)
{
20000050:	b580      	push	{r7, lr}
20000052:	b082      	sub	sp, #8
20000054:	af00      	add	r7, sp, #0
    char row, col, col_vals;
    
    for (row = 0; row < 4; row++)
20000056:	1dfb      	adds	r3, r7, #7
20000058:	2200      	movs	r2, #0
2000005a:	701a      	strb	r2, [r3, #0]
2000005c:	e037      	b.n	200000ce <keyb+0x7e>
    {
        // Activate row
        *keypad_out = (1 << (4 + row));
2000005e:	1dfb      	adds	r3, r7, #7
20000060:	781b      	ldrb	r3, [r3, #0]
20000062:	3304      	adds	r3, #4
20000064:	2201      	movs	r2, #1
20000066:	409a      	lsls	r2, r3
20000068:	4b1d      	ldr	r3, [pc, #116]	; (200000e0 <keyb+0x90>)
2000006a:	681b      	ldr	r3, [r3, #0]
2000006c:	b2d2      	uxtb	r2, r2
2000006e:	701a      	strb	r2, [r3, #0]
        
        // Read columns
        col_vals = *keypad_in & 0xF;
20000070:	4b1c      	ldr	r3, [pc, #112]	; (200000e4 <keyb+0x94>)
20000072:	681b      	ldr	r3, [r3, #0]
20000074:	781a      	ldrb	r2, [r3, #0]
20000076:	1d7b      	adds	r3, r7, #5
20000078:	210f      	movs	r1, #15
2000007a:	400a      	ands	r2, r1
2000007c:	701a      	strb	r2, [r3, #0]
        
        for (col = 0; col < 4; col++)
2000007e:	1dbb      	adds	r3, r7, #6
20000080:	2200      	movs	r2, #0
20000082:	701a      	strb	r2, [r3, #0]
20000084:	e016      	b.n	200000b4 <keyb+0x64>
        {
           if ( (col_vals & (1 << col)) != 0 )
20000086:	1d7b      	adds	r3, r7, #5
20000088:	781a      	ldrb	r2, [r3, #0]
2000008a:	1dbb      	adds	r3, r7, #6
2000008c:	781b      	ldrb	r3, [r3, #0]
2000008e:	411a      	asrs	r2, r3
20000090:	0013      	movs	r3, r2
20000092:	2201      	movs	r2, #1
20000094:	4013      	ands	r3, r2
20000096:	d008      	beq.n	200000aa <keyb+0x5a>
           {
               return KeyValues[row][col];
20000098:	1dfb      	adds	r3, r7, #7
2000009a:	781a      	ldrb	r2, [r3, #0]
2000009c:	1dbb      	adds	r3, r7, #6
2000009e:	781b      	ldrb	r3, [r3, #0]
200000a0:	4911      	ldr	r1, [pc, #68]	; (200000e8 <keyb+0x98>)
200000a2:	0092      	lsls	r2, r2, #2
200000a4:	188a      	adds	r2, r1, r2
200000a6:	5cd3      	ldrb	r3, [r2, r3]
200000a8:	e016      	b.n	200000d8 <keyb+0x88>
        for (col = 0; col < 4; col++)
200000aa:	1dbb      	adds	r3, r7, #6
200000ac:	781a      	ldrb	r2, [r3, #0]
200000ae:	1dbb      	adds	r3, r7, #6
200000b0:	3201      	adds	r2, #1
200000b2:	701a      	strb	r2, [r3, #0]
200000b4:	1dbb      	adds	r3, r7, #6
200000b6:	781b      	ldrb	r3, [r3, #0]
200000b8:	2b03      	cmp	r3, #3
200000ba:	d9e4      	bls.n	20000086 <keyb+0x36>
           } 
        }
        
        // Deactivate row
        *keypad_out = 0;
200000bc:	4b08      	ldr	r3, [pc, #32]	; (200000e0 <keyb+0x90>)
200000be:	681b      	ldr	r3, [r3, #0]
200000c0:	2200      	movs	r2, #0
200000c2:	701a      	strb	r2, [r3, #0]
    for (row = 0; row < 4; row++)
200000c4:	1dfb      	adds	r3, r7, #7
200000c6:	781a      	ldrb	r2, [r3, #0]
200000c8:	1dfb      	adds	r3, r7, #7
200000ca:	3201      	adds	r2, #1
200000cc:	701a      	strb	r2, [r3, #0]
200000ce:	1dfb      	adds	r3, r7, #7
200000d0:	781b      	ldrb	r3, [r3, #0]
200000d2:	2b03      	cmp	r3, #3
200000d4:	d9c3      	bls.n	2000005e <keyb+0xe>
    }
    
    return 0xFF;
200000d6:	23ff      	movs	r3, #255	; 0xff
}
200000d8:	0018      	movs	r0, r3
200000da:	46bd      	mov	sp, r7
200000dc:	b002      	add	sp, #8
200000de:	bd80      	pop	{r7, pc}
200000e0:	2000016c 	andcs	r0, r0, ip, ror #2
200000e4:	20000170 	andcs	r0, r0, r0, ror r1
200000e8:	2000015c 	andcs	r0, r0, ip, asr r1

200000ec <out7seg>:

void out7seg(unsigned char c)
{
200000ec:	b580      	push	{r7, lr}
200000ee:	b084      	sub	sp, #16
200000f0:	af00      	add	r7, sp, #0
200000f2:	0002      	movs	r2, r0
200000f4:	1dfb      	adds	r3, r7, #7
200000f6:	701a      	strb	r2, [r3, #0]
    char outVal;
    
    if (c >= sizeof(SegCodes))
200000f8:	1dfb      	adds	r3, r7, #7
200000fa:	781b      	ldrb	r3, [r3, #0]
200000fc:	2b0f      	cmp	r3, #15
200000fe:	d904      	bls.n	2000010a <out7seg+0x1e>
    {
        outVal = 0;
20000100:	230f      	movs	r3, #15
20000102:	18fb      	adds	r3, r7, r3
20000104:	2200      	movs	r2, #0
20000106:	701a      	strb	r2, [r3, #0]
20000108:	e006      	b.n	20000118 <out7seg+0x2c>
    }
    else
    {
        outVal = SegCodes[c];
2000010a:	1dfb      	adds	r3, r7, #7
2000010c:	781a      	ldrb	r2, [r3, #0]
2000010e:	230f      	movs	r3, #15
20000110:	18fb      	adds	r3, r7, r3
20000112:	4906      	ldr	r1, [pc, #24]	; (2000012c <out7seg+0x40>)
20000114:	5c8a      	ldrb	r2, [r1, r2]
20000116:	701a      	strb	r2, [r3, #0]
    }
    
    *display_out = outVal;
20000118:	4b05      	ldr	r3, [pc, #20]	; (20000130 <out7seg+0x44>)
2000011a:	681b      	ldr	r3, [r3, #0]
2000011c:	220f      	movs	r2, #15
2000011e:	18ba      	adds	r2, r7, r2
20000120:	7812      	ldrb	r2, [r2, #0]
20000122:	701a      	strb	r2, [r3, #0]
}
20000124:	46c0      	nop			; (mov r8, r8)
20000126:	46bd      	mov	sp, r7
20000128:	b004      	add	sp, #16
2000012a:	bd80      	pop	{r7, pc}
2000012c:	2000014c 	andcs	r0, r0, ip, asr #2
20000130:	20000174 	andcs	r0, r0, r4, ror r1

20000134 <main>:

void main(void)
{
20000134:	b580      	push	{r7, lr}
20000136:	af00      	add	r7, sp, #0
    app_init();
20000138:	f7ff ff6a 	bl	20000010 <app_init>
    while (1)
    {
        out7seg(keyb());
2000013c:	f7ff ff88 	bl	20000050 <keyb>
20000140:	0003      	movs	r3, r0
20000142:	0018      	movs	r0, r3
20000144:	f7ff ffd2 	bl	200000ec <out7seg>
20000148:	e7f8      	b.n	2000013c <main+0x8>
2000014a:	46c0      	nop			; (mov r8, r8)

2000014c <SegCodes>:
2000014c:	4f5b063f 	svcmi	0x005b063f
20000150:	077d6d66 	ldrbeq	r6, [sp, -r6, ror #26]!
20000154:	7c776f7f 	ldclvc	15, cr6, [r7], #-508	; 0xfffffe04
20000158:	71795e39 	cmnvc	r9, r9, lsr lr

2000015c <KeyValues>:
2000015c:	0a030201 	beq	200c0968 <display_out+0xc07f4>
20000160:	0b060504 	bleq	20181578 <display_out+0x181404>
20000164:	0c090807 	stceq	8, cr0, [r9], {7}
20000168:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 20000138 <main+0x4>

2000016c <keypad_out>:
2000016c:	40020c15 	andmi	r0, r2, r5, lsl ip

20000170 <keypad_in>:
20000170:	40020c11 	andmi	r0, r2, r1, lsl ip

20000174 <display_out>:
20000174:	40020c14 	andmi	r0, r2, r4, lsl ip

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	0000016e 	andeq	r0, r0, lr, ror #2
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000000 	andeq	r0, r0, r0
  10:	0000970c 	andeq	r9, r0, ip, lsl #14
  14:	00011c00 	andeq	r1, r1, r0, lsl #24
	...
  24:	003c0200 	eorseq	r0, ip, r0, lsl #4
  28:	00350000 	eorseq	r0, r5, r0
  2c:	35030000 	strcc	r0, [r3, #-0]
  30:	0f000000 	svceq	0x00000000
  34:	07040400 	streq	r0, [r4, -r0, lsl #8]
  38:	0000007c 	andeq	r0, r0, ip, ror r0
  3c:	0e080104 	adfeqe	f0, f0, f4
  40:	05000001 	streq	r0, [r0, #-1]
  44:	000000e3 	andeq	r0, r0, r3, ror #1
  48:	25100501 	ldrcs	r0, [r0, #-1281]	; 0xfffffaff
  4c:	05000000 	streq	r0, [r0, #-0]
  50:	00014c03 	andeq	r4, r1, r3, lsl #24
  54:	003c0220 	eorseq	r0, ip, r0, lsr #4
  58:	006b0000 	rsbeq	r0, fp, r0
  5c:	35030000 	strcc	r0, [r3, #-0]
  60:	03000000 	movweq	r0, #0
  64:	00003503 	andeq	r3, r0, r3, lsl #10
  68:	05000300 	streq	r0, [r0, #-768]	; 0xfffffd00
  6c:	000000ec 	andeq	r0, r0, ip, ror #1
  70:	55100601 	ldrpl	r0, [r0, #-1537]	; 0xfffff9ff
  74:	05000000 	streq	r0, [r0, #-0]
  78:	00015c03 	andeq	r5, r1, r3, lsl #24
  7c:	01030520 	tsteq	r3, r0, lsr #10
  80:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
  84:	00008f11 	andeq	r8, r0, r1, lsl pc
  88:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
  8c:	06200001 	strteq	r0, [r0], -r1
  90:	00003c04 	andeq	r3, r0, r4, lsl #24
  94:	00d90500 	sbcseq	r0, r9, r0, lsl #10
  98:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
  9c:	00008f11 	andeq	r8, r0, r1, lsl pc
  a0:	70030500 	andvc	r0, r3, r0, lsl #10
  a4:	05200001 	streq	r0, [r0, #-1]!
  a8:	00000163 	andeq	r0, r0, r3, ror #2
  ac:	8f110a01 	svchi	0x00110a01
  b0:	05000000 	streq	r0, [r0, #-0]
  b4:	00017403 	andeq	r7, r1, r3, lsl #8
  b8:	00f60720 	rscseq	r0, r6, r0, lsr #14
  bc:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
  c0:	00013406 	andeq	r3, r1, r6, lsl #8
  c4:	00001620 	andeq	r1, r0, r0, lsr #12
  c8:	089c0100 	ldmeq	ip, {r8}
  cc:	0000015b 	andeq	r0, r0, fp, asr r1
  d0:	ec063801 	stc	8, cr3, [r6], {1}
  d4:	48200000 	stmdami	r0!, {}	; <UNPREDICTABLE>
  d8:	01000000 	mrseq	r0, (UNDEF: 0)
  dc:	0000fe9c 	muleq	r0, ip, lr
  e0:	00630900 	rsbeq	r0, r3, r0, lsl #18
  e4:	3c1c3801 	ldccc	8, cr3, [ip], {1}
  e8:	02000000 	andeq	r0, r0, #0
  ec:	540a6f91 	strpl	r6, [sl], #-3985	; 0xfffff06f
  f0:	01000001 	tsteq	r0, r1
  f4:	00fe0a3a 	rscseq	r0, lr, sl, lsr sl
  f8:	91020000 	mrsls	r0, (UNDEF: 2)
  fc:	01040077 	tsteq	r4, r7, ror r0
 100:	00011708 	andeq	r1, r1, r8, lsl #14
 104:	00890b00 	addeq	r0, r9, r0, lsl #22
 108:	1d010000 	stcne	0, cr0, [r1, #-0]
 10c:	00003c0f 	andeq	r3, r0, pc, lsl #24
 110:	00005000 	andeq	r5, r0, r0
 114:	00009c20 	andeq	r9, r0, r0, lsr #24
 118:	4d9c0100 	ldfmis	f0, [ip]
 11c:	0c000001 	stceq	0, cr0, [r0], {1}
 120:	00776f72 	rsbseq	r6, r7, r2, ror pc
 124:	fe0a1f01 	cdp2	15, 0, cr1, cr10, cr1, {0}
 128:	02000000 	andeq	r0, r0, #0
 12c:	630c7791 	movwvs	r7, #51089	; 0xc791
 130:	01006c6f 	tsteq	r0, pc, ror #24
 134:	00fe0f1f 	rscseq	r0, lr, pc, lsl pc
 138:	91020000 	mrsls	r0, (UNDEF: 2)
 13c:	008e0a76 	addeq	r0, lr, r6, ror sl
 140:	1f010000 	svcne	0x00010000
 144:	0000fe14 	andeq	pc, r0, r4, lsl lr	; <UNPREDICTABLE>
 148:	75910200 	ldrvc	r0, [r1, #512]	; 0x200
 14c:	016f0d00 	cmneq	pc, r0, lsl #26
 150:	15010000 	strne	r0, [r1, #-0]
 154:	00001006 	andeq	r1, r0, r6
 158:	00004020 	andeq	r4, r0, r0, lsr #32
 15c:	0d9c0100 	ldfeqs	f0, [ip]
 160:	000000fb 	strdeq	r0, [r0], -fp
 164:	00060d01 	andeq	r0, r6, r1, lsl #26
 168:	0c200000 	stceq	0, cr0, [r0], #-0
 16c:	01000000 	mrseq	r0, (UNDEF: 0)
 170:	Address 0x00000170 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	13490101 	movtne	r0, #37121	; 0x9101
  18:	00001301 	andeq	r1, r0, r1, lsl #6
  1c:	49002103 	stmdbmi	r0, {r0, r1, r8, sp}
  20:	000b2f13 	andeq	r2, fp, r3, lsl pc
  24:	00240400 	eoreq	r0, r4, r0, lsl #8
  28:	0b3e0b0b 	bleq	f82c5c <startup-0x1f07d3a4>
  2c:	00000e03 	andeq	r0, r0, r3, lsl #28
  30:	03003405 	movweq	r3, #1029	; 0x405
  34:	3b0b3a0e 	blcc	2ce874 <startup-0x1fd3178c>
  38:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  3c:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
  40:	06000018 			; <UNDEFINED> instruction: 0x06000018
  44:	0b0b000f 	bleq	2c0088 <startup-0x1fd3ff78>
  48:	00001349 	andeq	r1, r0, r9, asr #6
  4c:	3f002e07 	svccc	0x00002e07
  50:	3a0e0319 	bcc	380cbc <startup-0x1fc7f344>
  54:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  58:	1119270b 	tstne	r9, fp, lsl #14
  5c:	40061201 	andmi	r1, r6, r1, lsl #4
  60:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
  64:	2e080000 	cdpcs	0, 0, cr0, cr8, cr0, {0}
  68:	03193f01 	tsteq	r9, #1, 30
  6c:	3b0b3a0e 	blcc	2ce8ac <startup-0x1fd31754>
  70:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  74:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  78:	97184006 	ldrls	r4, [r8, -r6]
  7c:	13011942 	movwne	r1, #6466	; 0x1942
  80:	05090000 	streq	r0, [r9, #-0]
  84:	3a080300 	bcc	200c8c <startup-0x1fdff374>
  88:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  8c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  90:	0a000018 	beq	f8 <startup-0x1fffff08>
  94:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  98:	0b3b0b3a 	bleq	ec2d88 <startup-0x1f13d278>
  9c:	13490b39 	movtne	r0, #39737	; 0x9b39
  a0:	00001802 	andeq	r1, r0, r2, lsl #16
  a4:	3f012e0b 	svccc	0x00012e0b
  a8:	3a0e0319 	bcc	380d14 <startup-0x1fc7f2ec>
  ac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  b0:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
  b4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  b8:	97184006 	ldrls	r4, [r8, -r6]
  bc:	13011942 	movwne	r1, #6466	; 0x1942
  c0:	340c0000 	strcc	r0, [ip], #-0
  c4:	3a080300 	bcc	200ccc <startup-0x1fdff334>
  c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  cc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  d0:	0d000018 	stceq	0, cr0, [r0, #-96]	; 0xffffffa0
  d4:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  d8:	0b3a0e03 	bleq	e838ec <startup-0x1f17c714>
  dc:	0b390b3b 	bleq	e42dd0 <startup-0x1f1bd230>
  e0:	01111927 	tsteq	r1, r7, lsr #18
  e4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  e8:	00194297 	mulseq	r9, r7, r2
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	0000013a 	andeq	r0, r0, sl, lsr r1
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	2000014a 	andcs	r0, r0, sl, asr #2
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000113 	andeq	r0, r0, r3, lsl r1
   4:	00580003 	subseq	r0, r8, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	44010000 	strmi	r0, [r1], #-0
  1c:	6f472f3a 	svcvs	0x00472f3a
  20:	656c676f 	strbvs	r6, [ip, #-1903]!	; 0xfffff891
  24:	76697244 	strbtvc	r7, [r9], -r4, asr #4
  28:	6f442f65 	svcvs	0x00442f65
  2c:	656d756b 	strbvs	r7, [sp, #-1387]!	; 0xfffffa95
  30:	532f746e 			; <UNDEFINED> instruction: 0x532f746e
  34:	616c6f6b 	cmnvs	ip, fp, ror #30
  38:	2f55472f 	svccs	0x0055472f
  3c:	31544944 	cmpcc	r4, r4, asr #18
  40:	432f3135 			; <UNDEFINED> instruction: 0x432f3135
  44:	4c65646f 	cfstrdmi	mvd6, [r5], #-444	; 0xfffffe44
  48:	2f657469 	svccs	0x00657469
  4c:	7079656b 	rsbsvc	r6, r9, fp, ror #10
  50:	00006461 	andeq	r6, r0, r1, ror #8
  54:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  58:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  5c:	00010063 	andeq	r0, r1, r3, rrx
  60:	01050000 	mrseq	r0, (UNDEF: 5)
  64:	00020500 	andeq	r0, r2, r0, lsl #10
  68:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  6c:	2113010d 	tstcs	r3, sp, lsl #2
  70:	02212f21 	eoreq	r2, r1, #33, 30	; 0x84
  74:	01010003 	tsteq	r1, r3
  78:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
  7c:	00001002 	andeq	r1, r0, r2
  80:	01150320 	tsteq	r5, r0, lsr #6
  84:	752f2605 	strvc	r2, [pc, #-1541]!	; fffffa87 <display_out+0xdffff913>
  88:	05670505 	strbeq	r0, [r7, #-1285]!	; 0xfffffafb
  8c:	05052027 	streq	r2, [r5, #-39]	; 0xffffffd9
  90:	2028052f 	eorcs	r0, r8, pc, lsr #10
  94:	af2f0105 	svcge	0x002f0105
  98:	053f0e05 	ldreq	r0, [pc, #-3589]!	; fffff29b <display_out+0xdffff127>
  9c:	20053c05 	andcs	r3, r5, r5, lsl #24
  a0:	3c1a0523 	cfldr32cc	mvfx0, [sl], {35}	; 0x23
  a4:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
  a8:	1f052e15 	svcne	0x00052e15
  ac:	3c120531 	cfldr32cc	mvfx0, [r2], {49}	; 0x31
  b0:	3c09054c 	cfstr32cc	mvfx0, [r9], {76}	; 0x4c
  b4:	05222905 	streq	r2, [r2, #-2309]!	; 0xfffff6fb
  b8:	2505820f 	strcs	r8, [r5, #-527]	; 0xfffffdf1
  bc:	00230522 	eoreq	r0, r3, r2, lsr #10
  c0:	8c020402 	cfstrshi	mvf0, [r2], {2}
  c4:	02000905 	andeq	r0, r0, #81920	; 0x14000
  c8:	00580104 	subseq	r0, r8, r4, lsl #2
  cc:	03020402 	movweq	r0, #9218	; 0x2402
  d0:	15054a09 	strne	r4, [r5, #-2569]	; 0xfffff5f7
  d4:	02040200 	andeq	r0, r4, #0, 4
  d8:	001f052e 	andseq	r0, pc, lr, lsr #10
  dc:	03020402 	movweq	r0, #9218	; 0x2402
  e0:	05052e6f 	streq	r2, [r5, #-3695]	; 0xfffff191
  e4:	01040200 	mrseq	r0, R12_usr
  e8:	030c0558 	movweq	r0, #50520	; 0xc558
  ec:	01054a14 	tsteq	r5, r4, lsl sl
  f0:	0805a121 	stmdaeq	r5, {r0, r5, r8, sp, pc}
  f4:	4c100569 	cfldr32mi	mvfx0, [r0], {105}	; 0x69
  f8:	055c1a05 	ldrbeq	r1, [ip, #-2565]	; 0xfffff5fb
  fc:	05052e10 	streq	r2, [r5, #-3600]	; 0xfffff1f0
 100:	2e12055b 	mrccs	5, 0, r0, cr2, cr11, {2}
 104:	854b0105 	strbhi	r0, [fp, #-261]	; 0xfffffefb
 108:	052f0505 	streq	r0, [pc, #-1285]!	; fffffc0b <display_out+0xdffffa97>
 10c:	04020009 	streq	r0, [r2], #-9
 110:	07023101 	streq	r3, [r2, -r1, lsl #2]
 114:	Address 0x00000114 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	20554e47 	subscs	r4, r5, r7, asr #28
   4:	20393943 	eorscs	r3, r9, r3, asr #18
   8:	2e322e39 	mrccs	14, 1, r2, cr2, cr9, {1}
   c:	30322031 	eorscc	r2, r2, r1, lsr r0
  10:	30313931 	eorscc	r3, r1, r1, lsr r9
  14:	28203532 	stmdacs	r0!, {r1, r4, r5, r8, sl, ip, sp}
  18:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  1c:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  20:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  24:	72612f4d 	rsbvc	r2, r1, #308	; 0x134
  28:	2d392d6d 	ldccs	13, cr2, [r9, #-436]!	; 0xfffffe4c
  2c:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  30:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  34:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  38:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  3c:	35373732 	ldrcc	r3, [r7, #-1842]!	; 0xfffff8ce
  40:	205d3939 	subscs	r3, sp, r9, lsr r9
  44:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  48:	20626d75 	rsbcs	r6, r2, r5, ror sp
  4c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  50:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  54:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  58:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  5c:	616d2d20 	cmnvs	sp, r0, lsr #26
  60:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  64:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  68:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  6c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  70:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  74:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  78:	00393963 	eorseq	r3, r9, r3, ror #18
  7c:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  80:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  84:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
  88:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
  8c:	6f630062 	svcvs	0x00630062
  90:	61765f6c 	cmnvs	r6, ip, ror #30
  94:	4400736c 	strmi	r7, [r0], #-876	; 0xfffffc94
  98:	6f472f3a 	svcvs	0x00472f3a
  9c:	656c676f 	strbvs	r6, [ip, #-1903]!	; 0xfffff891
  a0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
  a4:	6f442f65 	svcvs	0x00442f65
  a8:	656d756b 	strbvs	r7, [sp, #-1387]!	; 0xfffffa95
  ac:	532f746e 			; <UNDEFINED> instruction: 0x532f746e
  b0:	616c6f6b 	cmnvs	ip, fp, ror #30
  b4:	2f55472f 	svccs	0x0055472f
  b8:	31544944 	cmpcc	r4, r4, asr #18
  bc:	432f3135 			; <UNDEFINED> instruction: 0x432f3135
  c0:	4c65646f 	cfstrdmi	mvd6, [r5], #-444	; 0xfffffe44
  c4:	2f657469 	svccs	0x00657469
  c8:	7079656b 	rsbsvc	r6, r9, fp, ror #10
  cc:	732f6461 			; <UNDEFINED> instruction: 0x732f6461
  d0:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  d4:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
  d8:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
  dc:	5f646170 	svcpl	0x00646170
  e0:	53006e69 	movwpl	r6, #3689	; 0xe69
  e4:	6f436765 	svcvs	0x00436765
  e8:	00736564 	rsbseq	r6, r3, r4, ror #10
  ec:	5679654b 	ldrbtpl	r6, [r9], -fp, asr #10
  f0:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
  f4:	616d0073 	smcvs	53251	; 0xd003
  f8:	73006e69 	movwvc	r6, #3689	; 0xe69
  fc:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 100:	6b007075 	blvs	1c2dc <startup-0x1ffe3d24>
 104:	61707965 	cmnvs	r0, r5, ror #18
 108:	756f5f64 	strbvc	r5, [pc, #-3940]!	; fffff1ac <display_out+0xdffff038>
 10c:	6e750074 	mrcvs	0, 3, r0, cr5, cr4, {3}
 110:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 114:	63206465 			; <UNDEFINED> instruction: 0x63206465
 118:	00726168 	rsbseq	r6, r2, r8, ror #2
 11c:	475c3a44 	ldrbmi	r3, [ip, -r4, asr #20]
 120:	6c676f6f 	stclvs	15, cr6, [r7], #-444	; 0xfffffe44
 124:	69724465 	ldmdbvs	r2!, {r0, r2, r5, r6, sl, lr}^
 128:	445c6576 	ldrbmi	r6, [ip], #-1398	; 0xfffffa8a
 12c:	6d756b6f 	fldmdbxvs	r5!, {d22-d76}	;@ Deprecated
 130:	5c746e65 	ldclpl	14, cr6, [r4], #-404	; 0xfffffe6c
 134:	6c6f6b53 			; <UNDEFINED> instruction: 0x6c6f6b53
 138:	55475c61 	strbpl	r5, [r7, #-3169]	; 0xfffff39f
 13c:	5449445c 	strbpl	r4, [r9], #-1116	; 0xfffffba4
 140:	5c313531 	cfldr32pl	mvfx3, [r1], #-196	; 0xffffff3c
 144:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 148:	6574694c 	ldrbvs	r6, [r4, #-2380]!	; 0xfffff6b4
 14c:	79656b5c 	stmdbvc	r5!, {r2, r3, r4, r6, r8, r9, fp, sp, lr}^
 150:	00646170 	rsbeq	r6, r4, r0, ror r1
 154:	5674756f 	ldrbtpl	r7, [r4], -pc, ror #10
 158:	6f006c61 	svcvs	0x00006c61
 15c:	73377475 	teqvc	r7, #1962934272	; 0x75000000
 160:	64006765 	strvs	r6, [r0], #-1893	; 0xfffff89b
 164:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 168:	6f5f7961 	svcvs	0x005f7961
 16c:	61007475 	tstvs	r0, r5, ror r4
 170:	695f7070 	ldmdbvs	pc, {r4, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
 174:	0074696e 	rsbseq	r6, r4, lr, ror #18

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000040 	andeq	r0, r0, r0, asr #32
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0000070d 	andeq	r0, r0, sp, lsl #14
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000050 	andcs	r0, r0, r0, asr r0
  48:	0000009c 	muleq	r0, ip, r0
  4c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  50:	41018e02 	tstmi	r1, r2, lsl #28
  54:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  58:	00000007 	andeq	r0, r0, r7
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	200000ec 	andcs	r0, r0, ip, ror #1
  68:	00000048 	andeq	r0, r0, r8, asr #32
  6c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  70:	41018e02 	tstmi	r1, r2, lsl #28
  74:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  78:	00000007 	andeq	r0, r0, r7
  7c:	00000018 	andeq	r0, r0, r8, lsl r0
  80:	00000000 	andeq	r0, r0, r0
  84:	20000134 	andcs	r0, r0, r4, lsr r1
  88:	00000016 	andeq	r0, r0, r6, lsl r0
  8c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  90:	41018e02 	tstmi	r1, r2, lsl #28
  94:	0000070d 	andeq	r0, r0, sp, lsl #14
