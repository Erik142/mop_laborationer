
./Debug/keypad.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 #define PORTD_ODR_LOW *((unsigned char *) 0x40020C14)
 
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f8a2 	bl	2000014c <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <app_init>:

void app_init(void)
{
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
#ifdef USBDM
    // Starta klockor port D och E
    * ( (unsigned long *) 0x40023830) = 0x18;
#endif
    * ( (unsigned int *) 0x40020C00) = 0x55005555;   // Configure port D bit 15-12, 7-0 as output
20000014:	4b05      	ldr	r3, [pc, #20]	; (2000002c <app_init+0x1c>)
20000016:	4a06      	ldr	r2, [pc, #24]	; (20000030 <app_init+0x20>)
20000018:	601a      	str	r2, [r3, #0]
    * ( (unsigned char *) 0x40020C05) = 0;         // Configure port D GPIO_OTYPER
2000001a:	4b06      	ldr	r3, [pc, #24]	; (20000034 <app_init+0x24>)
2000001c:	2200      	movs	r2, #0
2000001e:	701a      	strb	r2, [r3, #0]
    * ( (unsigned short *) 0x40020C0E) = 0xAA;    // Configure port D GPIO_PUPDR
20000020:	4b05      	ldr	r3, [pc, #20]	; (20000038 <app_init+0x28>)
20000022:	22aa      	movs	r2, #170	; 0xaa
20000024:	801a      	strh	r2, [r3, #0]
}
20000026:	46c0      	nop			; (mov r8, r8)
20000028:	46bd      	mov	sp, r7
2000002a:	bd80      	pop	{r7, pc}
2000002c:	40020c00 	andmi	r0, r2, r0, lsl #24
20000030:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab
20000034:	40020c05 	andmi	r0, r2, r5, lsl #24
20000038:	40020c0e 	andmi	r0, r2, lr, lsl #24

2000003c <keyb>:

unsigned char keyb(void)
{
2000003c:	b580      	push	{r7, lr}
2000003e:	b084      	sub	sp, #16
20000040:	af00      	add	r7, sp, #0
    char row, col, col_vals;
    
    for (row = 0; row < 4; row++)
20000042:	230f      	movs	r3, #15
20000044:	18fb      	adds	r3, r7, r3
20000046:	2200      	movs	r2, #0
20000048:	701a      	strb	r2, [r3, #0]
2000004a:	e049      	b.n	200000e0 <keyb+0xa4>
    {
        // Activate row
        *keypad_out = (1 << (4 + row));
2000004c:	230f      	movs	r3, #15
2000004e:	18fb      	adds	r3, r7, r3
20000050:	781b      	ldrb	r3, [r3, #0]
20000052:	3304      	adds	r3, #4
20000054:	2201      	movs	r2, #1
20000056:	409a      	lsls	r2, r3
20000058:	4b26      	ldr	r3, [pc, #152]	; (200000f4 <keyb+0xb8>)
2000005a:	681b      	ldr	r3, [r3, #0]
2000005c:	b2d2      	uxtb	r2, r2
2000005e:	701a      	strb	r2, [r3, #0]
        //*PORTD_ODR_HIGH = (1 << (4 + row));
        
        for (int i=0;i<10000;i++){
20000060:	2300      	movs	r3, #0
20000062:	60bb      	str	r3, [r7, #8]
20000064:	e002      	b.n	2000006c <keyb+0x30>
20000066:	68bb      	ldr	r3, [r7, #8]
20000068:	3301      	adds	r3, #1
2000006a:	60bb      	str	r3, [r7, #8]
2000006c:	68bb      	ldr	r3, [r7, #8]
2000006e:	4a22      	ldr	r2, [pc, #136]	; (200000f8 <keyb+0xbc>)
20000070:	4293      	cmp	r3, r2
20000072:	ddf8      	ble.n	20000066 <keyb+0x2a>
            
        }
        
        // Read columns
        col_vals = *keypad_in & 0xF;
20000074:	4b21      	ldr	r3, [pc, #132]	; (200000fc <keyb+0xc0>)
20000076:	681b      	ldr	r3, [r3, #0]
20000078:	781a      	ldrb	r2, [r3, #0]
2000007a:	1dfb      	adds	r3, r7, #7
2000007c:	210f      	movs	r1, #15
2000007e:	400a      	ands	r2, r1
20000080:	701a      	strb	r2, [r3, #0]
        //col_vals = *PORTD_IDR_HIGH & 0xF;
        
        for (col = 0; col < 4; col++)
20000082:	230e      	movs	r3, #14
20000084:	18fb      	adds	r3, r7, r3
20000086:	2200      	movs	r2, #0
20000088:	701a      	strb	r2, [r3, #0]
2000008a:	e01a      	b.n	200000c2 <keyb+0x86>
        {
           if ( (col_vals & (1 << col)) != 0 )
2000008c:	1dfb      	adds	r3, r7, #7
2000008e:	781a      	ldrb	r2, [r3, #0]
20000090:	230e      	movs	r3, #14
20000092:	18fb      	adds	r3, r7, r3
20000094:	781b      	ldrb	r3, [r3, #0]
20000096:	411a      	asrs	r2, r3
20000098:	0013      	movs	r3, r2
2000009a:	2201      	movs	r2, #1
2000009c:	4013      	ands	r3, r2
2000009e:	d00a      	beq.n	200000b6 <keyb+0x7a>
           {
               return KeyValues[row][col];
200000a0:	230f      	movs	r3, #15
200000a2:	18fb      	adds	r3, r7, r3
200000a4:	781a      	ldrb	r2, [r3, #0]
200000a6:	230e      	movs	r3, #14
200000a8:	18fb      	adds	r3, r7, r3
200000aa:	781b      	ldrb	r3, [r3, #0]
200000ac:	4914      	ldr	r1, [pc, #80]	; (20000100 <keyb+0xc4>)
200000ae:	0092      	lsls	r2, r2, #2
200000b0:	188a      	adds	r2, r1, r2
200000b2:	5cd3      	ldrb	r3, [r2, r3]
200000b4:	e01a      	b.n	200000ec <keyb+0xb0>
        for (col = 0; col < 4; col++)
200000b6:	210e      	movs	r1, #14
200000b8:	187b      	adds	r3, r7, r1
200000ba:	781a      	ldrb	r2, [r3, #0]
200000bc:	187b      	adds	r3, r7, r1
200000be:	3201      	adds	r2, #1
200000c0:	701a      	strb	r2, [r3, #0]
200000c2:	230e      	movs	r3, #14
200000c4:	18fb      	adds	r3, r7, r3
200000c6:	781b      	ldrb	r3, [r3, #0]
200000c8:	2b03      	cmp	r3, #3
200000ca:	d9df      	bls.n	2000008c <keyb+0x50>
           } 
        }
        
        // Deactivate row
        *keypad_out = 0;
200000cc:	4b09      	ldr	r3, [pc, #36]	; (200000f4 <keyb+0xb8>)
200000ce:	681b      	ldr	r3, [r3, #0]
200000d0:	2200      	movs	r2, #0
200000d2:	701a      	strb	r2, [r3, #0]
    for (row = 0; row < 4; row++)
200000d4:	210f      	movs	r1, #15
200000d6:	187b      	adds	r3, r7, r1
200000d8:	781a      	ldrb	r2, [r3, #0]
200000da:	187b      	adds	r3, r7, r1
200000dc:	3201      	adds	r2, #1
200000de:	701a      	strb	r2, [r3, #0]
200000e0:	230f      	movs	r3, #15
200000e2:	18fb      	adds	r3, r7, r3
200000e4:	781b      	ldrb	r3, [r3, #0]
200000e6:	2b03      	cmp	r3, #3
200000e8:	d9b0      	bls.n	2000004c <keyb+0x10>
    }
    
    return 0xFF;
200000ea:	23ff      	movs	r3, #255	; 0xff
}
200000ec:	0018      	movs	r0, r3
200000ee:	46bd      	mov	sp, r7
200000f0:	b004      	add	sp, #16
200000f2:	bd80      	pop	{r7, pc}
200000f4:	20000164 	andcs	r0, r0, r4, ror #2
200000f8:	0000270f 	andeq	r2, r0, pc, lsl #14
200000fc:	20000168 	andcs	r0, r0, r8, ror #2
20000100:	20000180 	andcs	r0, r0, r0, lsl #3

20000104 <out7seg>:

void out7seg(unsigned char c)
{
20000104:	b580      	push	{r7, lr}
20000106:	b084      	sub	sp, #16
20000108:	af00      	add	r7, sp, #0
2000010a:	0002      	movs	r2, r0
2000010c:	1dfb      	adds	r3, r7, #7
2000010e:	701a      	strb	r2, [r3, #0]
    char outVal;
    
    if (c >= sizeof(SegCodes))
20000110:	1dfb      	adds	r3, r7, #7
20000112:	781b      	ldrb	r3, [r3, #0]
20000114:	2b0f      	cmp	r3, #15
20000116:	d904      	bls.n	20000122 <out7seg+0x1e>
    {
        outVal = 0;
20000118:	230f      	movs	r3, #15
2000011a:	18fb      	adds	r3, r7, r3
2000011c:	2200      	movs	r2, #0
2000011e:	701a      	strb	r2, [r3, #0]
20000120:	e006      	b.n	20000130 <out7seg+0x2c>
    }
    else
    {
        outVal = SegCodes[c];
20000122:	1dfb      	adds	r3, r7, #7
20000124:	781a      	ldrb	r2, [r3, #0]
20000126:	230f      	movs	r3, #15
20000128:	18fb      	adds	r3, r7, r3
2000012a:	4906      	ldr	r1, [pc, #24]	; (20000144 <out7seg+0x40>)
2000012c:	5c8a      	ldrb	r2, [r1, r2]
2000012e:	701a      	strb	r2, [r3, #0]
    }
    
    *display_out = outVal;
20000130:	4b05      	ldr	r3, [pc, #20]	; (20000148 <out7seg+0x44>)
20000132:	681b      	ldr	r3, [r3, #0]
20000134:	220f      	movs	r2, #15
20000136:	18ba      	adds	r2, r7, r2
20000138:	7812      	ldrb	r2, [r2, #0]
2000013a:	701a      	strb	r2, [r3, #0]
}
2000013c:	46c0      	nop			; (mov r8, r8)
2000013e:	46bd      	mov	sp, r7
20000140:	b004      	add	sp, #16
20000142:	bd80      	pop	{r7, pc}
20000144:	20000170 	andcs	r0, r0, r0, ror r1
20000148:	2000016c 	andcs	r0, r0, ip, ror #2

2000014c <main>:

void main(void)
{
2000014c:	b580      	push	{r7, lr}
2000014e:	af00      	add	r7, sp, #0
    app_init();
20000150:	f7ff ff5e 	bl	20000010 <app_init>
    while (1)
    {
        out7seg(keyb());
20000154:	f7ff ff72 	bl	2000003c <keyb>
20000158:	0003      	movs	r3, r0
2000015a:	0018      	movs	r0, r3
2000015c:	f7ff ffd2 	bl	20000104 <out7seg>
20000160:	e7f8      	b.n	20000154 <main+0x8>
20000162:	46c0      	nop			; (mov r8, r8)

20000164 <keypad_out>:
20000164:	40020c15 	andmi	r0, r2, r5, lsl ip

20000168 <keypad_in>:
20000168:	40020c11 	andmi	r0, r2, r1, lsl ip

2000016c <display_out>:
2000016c:	40020c14 	andmi	r0, r2, r4, lsl ip

20000170 <SegCodes>:
20000170:	4f5b063f 	svcmi	0x005b063f
20000174:	077d6d66 	ldrbeq	r6, [sp, -r6, ror #26]!
20000178:	7c776f7f 	ldclvc	15, cr6, [r7], #-508	; 0xfffffe04
2000017c:	71795e39 	cmnvc	r9, r9, lsr lr

20000180 <KeyValues>:
20000180:	0a030201 	beq	200c098c <KeyValues+0xc080c>
20000184:	0b060504 	bleq	2018159c <KeyValues+0x18141c>
20000188:	0c090807 	stceq	8, cr0, [r9], {7}
2000018c:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 2000015c <main+0x10>

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	0000018b 	andeq	r0, r0, fp, lsl #3
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000088 	andeq	r0, r0, r8, lsl #1
  10:	00001b0c 	andeq	r1, r0, ip, lsl #22
  14:	00012200 	andeq	r2, r1, r0, lsl #4
	...
  24:	00480200 	subeq	r0, r8, r0, lsl #4
  28:	00350000 	eorseq	r0, r5, r0
  2c:	3a030000 	bcc	c0034 <startup-0x1ff3ffcc>
  30:	0f000000 	svceq	0x00000000
  34:	00250400 	eoreq	r0, r5, r0, lsl #8
  38:	04050000 	streq	r0, [r5], #-0
  3c:	00000007 	andeq	r0, r0, r7
  40:	08010500 	stmdaeq	r1, {r8, sl}
  44:	00000114 	andeq	r0, r0, r4, lsl r1
  48:	00004104 	andeq	r4, r0, r4, lsl #2
  4c:	00750600 	rsbseq	r0, r5, r0, lsl #12
  50:	05010000 	streq	r0, [r1, #-0]
  54:	00000035 	andeq	r0, r0, r5, lsr r0
  58:	01700305 	cmneq	r0, r5, lsl #6
  5c:	48022000 	stmdami	r2, {sp}
  60:	74000000 	strvc	r0, [r0], #-0
  64:	03000000 	movweq	r0, #0
  68:	0000003a 	andeq	r0, r0, sl, lsr r0
  6c:	003a0303 	eorseq	r0, sl, r3, lsl #6
  70:	00030000 	andeq	r0, r3, r0
  74:	00005e04 	andeq	r5, r0, r4, lsl #28
  78:	007e0600 	rsbseq	r0, lr, r0, lsl #12
  7c:	06010000 	streq	r0, [r1], -r0
  80:	00000074 	andeq	r0, r0, r4, ror r0
  84:	01800305 	orreq	r0, r0, r5, lsl #6
  88:	09062000 	stmdbeq	r6, {sp}
  8c:	01000001 	tsteq	r0, r1
  90:	00009b08 	andeq	r9, r0, r8, lsl #22
  94:	64030500 	strvs	r0, [r3], #-1280	; 0xfffffb00
  98:	07200001 	streq	r0, [r0, -r1]!
  9c:	00004104 	andeq	r4, r0, r4, lsl #2
  a0:	006b0600 	rsbeq	r0, fp, r0, lsl #12
  a4:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
  a8:	0000009b 	muleq	r0, fp, r0
  ac:	01680305 	cmneq	r8, r5, lsl #6
  b0:	74062000 	strvc	r2, [r6], #-0
  b4:	01000001 	tsteq	r0, r1
  b8:	00009b0a 	andeq	r9, r0, sl, lsl #22
  bc:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
  c0:	08200001 	stmdaeq	r0!, {r0}
  c4:	00000167 	andeq	r0, r0, r7, ror #2
  c8:	014c5601 	cmpeq	ip, r1, lsl #12
  cc:	00162000 	andseq	r2, r6, r0
  d0:	9c010000 	stcls	0, cr0, [r1], {-0}
  d4:	00016c09 	andeq	r6, r1, r9, lsl #24
  d8:	04460100 	strbeq	r0, [r6], #-256	; 0xffffff00
  dc:	48200001 	stmdami	r0!, {r0}
  e0:	01000000 	mrseq	r0, (UNDEF: 0)
  e4:	0001049c 	muleq	r1, ip, r4
  e8:	00630a00 	rsbeq	r0, r3, r0, lsl #20
  ec:	00414601 	subeq	r4, r1, r1, lsl #12
  f0:	91020000 	mrsls	r0, (UNDEF: 2)
  f4:	01600b6f 	cmneq	r0, pc, ror #22
  f8:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
  fc:	00000104 	andeq	r0, r0, r4, lsl #2
 100:	00779102 	rsbseq	r9, r7, r2, lsl #2
 104:	1d080105 	stfnes	f0, [r8, #-20]	; 0xffffffec
 108:	0c000001 	stceq	0, cr0, [r0], {1}
 10c:	0000000d 	andeq	r0, r0, sp
 110:	00412501 	subeq	r2, r1, r1, lsl #10
 114:	003c0000 	eorseq	r0, ip, r0
 118:	00c82000 	sbceq	r2, r8, r0
 11c:	9c010000 	stcls	0, cr0, [r1], {-0}
 120:	00000165 	andeq	r0, r0, r5, ror #2
 124:	776f720d 	strbvc	r7, [pc, -sp, lsl #4]!
 128:	04270100 	strteq	r0, [r7], #-256	; 0xffffff00
 12c:	02000001 	andeq	r0, r0, #1
 130:	630d7791 	movwvs	r7, #55185	; 0xd791
 134:	01006c6f 	tsteq	r0, pc, ror #24
 138:	00010427 	andeq	r0, r1, r7, lsr #8
 13c:	76910200 	ldrvc	r0, [r1], r0, lsl #4
 140:	0000120b 	andeq	r1, r0, fp, lsl #4
 144:	04270100 	strteq	r0, [r7], #-256	; 0xffffff00
 148:	02000001 	andeq	r0, r0, #1
 14c:	600e6f91 	mulvs	lr, r1, pc	; <UNPREDICTABLE>
 150:	14200000 	strtne	r0, [r0], #-0
 154:	0d000000 	stceq	0, cr0, [r0, #-0]
 158:	2f010069 	svccs	0x00010069
 15c:	00000165 	andeq	r0, r0, r5, ror #2
 160:	00709102 	rsbseq	r9, r0, r2, lsl #2
 164:	05040f00 	streq	r0, [r4, #-3840]	; 0xfffff100
 168:	00746e69 	rsbseq	r6, r4, r9, ror #28
 16c:	00018010 	andeq	r8, r1, r0, lsl r0
 170:	101a0100 	andsne	r0, sl, r0, lsl #2
 174:	2c200000 	stccs	0, cr0, [r0], #-0
 178:	01000000 	mrseq	r0, (UNDEF: 0)
 17c:	0063109c 	mlseq	r3, ip, r0, r1
 180:	12010000 	andne	r0, r1, #0
 184:	20000000 	andcs	r0, r0, r0
 188:	0000000c 	andeq	r0, r0, ip
 18c:	Address 0x0000018c is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	13490101 	movtne	r0, #37121	; 0x9101
  18:	00001301 	andeq	r1, r0, r1, lsl #6
  1c:	49002103 	stmdbmi	r0, {r0, r1, r8, sp}
  20:	000b2f13 	andeq	r2, fp, r3, lsl pc
  24:	00260400 	eoreq	r0, r6, r0, lsl #8
  28:	00001349 	andeq	r1, r0, r9, asr #6
  2c:	0b002405 	bleq	9048 <startup-0x1fff6fb8>
  30:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  34:	0600000e 	streq	r0, [r0], -lr
  38:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  3c:	0b3b0b3a 	bleq	ec2d2c <startup-0x1f13d2d4>
  40:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
  44:	00001802 	andeq	r1, r0, r2, lsl #16
  48:	0b000f07 	bleq	3c6c <startup-0x1fffc394>
  4c:	0013490b 	andseq	r4, r3, fp, lsl #18
  50:	002e0800 	eoreq	r0, lr, r0, lsl #16
  54:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  58:	0b3b0b3a 	bleq	ec2d48 <startup-0x1f13d2b8>
  5c:	01111927 	tsteq	r1, r7, lsr #18
  60:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  64:	00194296 	mulseq	r9, r6, r2
  68:	012e0900 			; <UNDEFINED> instruction: 0x012e0900
  6c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  70:	0b3b0b3a 	bleq	ec2d60 <startup-0x1f13d2a0>
  74:	01111927 	tsteq	r1, r7, lsr #18
  78:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  7c:	01194297 			; <UNDEFINED> instruction: 0x01194297
  80:	0a000013 	beq	d4 <startup-0x1fffff2c>
  84:	08030005 	stmdaeq	r3, {r0, r2}
  88:	0b3b0b3a 	bleq	ec2d78 <startup-0x1f13d288>
  8c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  90:	340b0000 	strcc	r0, [fp], #-0
  94:	3a0e0300 	bcc	380c9c <startup-0x1fc7f364>
  98:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  9c:	00180213 	andseq	r0, r8, r3, lsl r2
  a0:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
  a4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  a8:	0b3b0b3a 	bleq	ec2d98 <startup-0x1f13d268>
  ac:	13491927 	movtne	r1, #39207	; 0x9927
  b0:	06120111 			; <UNDEFINED> instruction: 0x06120111
  b4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  b8:	00130119 	andseq	r0, r3, r9, lsl r1
  bc:	00340d00 	eorseq	r0, r4, r0, lsl #26
  c0:	0b3a0803 	bleq	e820d4 <startup-0x1f17df2c>
  c4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  c8:	00001802 	andeq	r1, r0, r2, lsl #16
  cc:	11010b0e 	tstne	r1, lr, lsl #22
  d0:	00061201 	andeq	r1, r6, r1, lsl #4
  d4:	00240f00 	eoreq	r0, r4, r0, lsl #30
  d8:	0b3e0b0b 	bleq	f82d0c <startup-0x1f07d2f4>
  dc:	00000803 	andeq	r0, r0, r3, lsl #16
  e0:	3f002e10 	svccc	0x00002e10
  e4:	3a0e0319 	bcc	380d50 <startup-0x1fc7f2b0>
  e8:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  ec:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  f0:	97184006 	ldrls	r4, [r8, -r6]
  f4:	00001942 	andeq	r1, r0, r2, asr #18
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000152 	andeq	r0, r0, r2, asr r1
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000162 	andcs	r0, r0, r2, ror #2
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000d1 	ldrdeq	r0, [r0], -r1
   4:	005e0002 	subseq	r0, lr, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	5a010000 	bpl	40020 <startup-0x1ffbffe0>
  1c:	55472f3a 	strbpl	r2, [r7, #-3898]	; 0xfffff0c6
  20:	5449442f 	strbpl	r4, [r9], #-1071	; 0xfffffbd1
  24:	20313531 	eorscs	r3, r1, r1, lsr r5
  28:	614d202d 	cmpvs	sp, sp, lsr #32
  2c:	6e696b73 	vmovvs.8	d9[7], r6
  30:	6569726f 	strbvs	r7, [r9, #-623]!	; 0xfffffd91
  34:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
  38:	50206461 	eorpl	r6, r0, r1, ror #8
  3c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
  40:	656d6d61 	strbvs	r6, [sp, #-3425]!	; 0xfffff29f
  44:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
  48:	646f432f 	strbtvs	r4, [pc], #-815	; 50 <startup-0x1fffffb0>
  4c:	74694c65 	strbtvc	r4, [r9], #-3173	; 0xfffff39b
  50:	656b2f65 	strbvs	r2, [fp, #-3941]!	; 0xfffff09b
  54:	64617079 	strbtvs	r7, [r1], #-121	; 0xffffff87
  58:	74730000 	ldrbtvc	r0, [r3], #-0
  5c:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  60:	00632e70 	rsbeq	r2, r3, r0, ror lr
  64:	00000001 	andeq	r0, r0, r1
  68:	00020500 	andeq	r0, r2, r0, lsl #10
  6c:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  70:	21130112 	tstcs	r3, r2, lsl r1
  74:	02212f21 	eoreq	r2, r1, #33, 30	; 0x84
  78:	01010003 	tsteq	r1, r3
  7c:	10020500 	andne	r0, r2, r0, lsl #10
  80:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  84:	3d33011a 	ldfccs	f0, [r3, #-104]!	; 0xffffff98
  88:	3faf3d3d 	svccc	0x00af3d3d
  8c:	0200a15b 	andeq	sl, r0, #-1073741802	; 0xc0000016
  90:	3c060304 	stccc	3, cr0, [r6], {4}
  94:	01040200 	mrseq	r0, R12_usr
  98:	774f063c 	smlaldxvc	r0, pc, ip, r6	; <UNPREDICTABLE>
  9c:	0200a05a 	andeq	sl, r0, #90	; 0x5a
  a0:	00a80204 	adceq	r0, r8, r4, lsl #4
  a4:	06010402 	streq	r0, [r1], -r2, lsl #8
  a8:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
  ac:	09030602 	stmdbeq	r3, {r1, r9, sl}
  b0:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
  b4:	4a690302 	bmi	1a40cc4 <startup-0x1e5bf33c>
  b8:	01040200 	mrseq	r0, R12_usr
  bc:	03066606 	movweq	r6, #26118	; 0x6606
  c0:	bd21581a 	stclt	8, cr5, [r1, #-104]!	; 0xffffff98
  c4:	775c4c69 	ldrbvc	r4, [ip, -r9, ror #24]
  c8:	002f8567 	eoreq	r8, pc, r7, ror #10
  cc:	31010402 	tstcc	r1, r2, lsl #8
  d0:	01000702 	tsteq	r0, r2, lsl #14
  d4:	Address 0x000000d4 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
   4:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
   8:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
   c:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
  10:	6f630062 	svcvs	0x00630062
  14:	61765f6c 	cmnvs	r6, ip, ror #30
  18:	5a00736c 	bpl	1cdd0 <startup-0x1ffe3230>
  1c:	55472f3a 	strbpl	r2, [r7, #-3898]	; 0xfffff0c6
  20:	5449442f 	strbpl	r4, [r9], #-1071	; 0xfffffbd1
  24:	20313531 	eorscs	r3, r1, r1, lsr r5
  28:	614d202d 	cmpvs	sp, sp, lsr #32
  2c:	6e696b73 	vmovvs.8	d9[7], r6
  30:	6569726f 	strbvs	r7, [r9, #-623]!	; 0xfffffd91
  34:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
  38:	50206461 	eorpl	r6, r0, r1, ror #8
  3c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
  40:	656d6d61 	strbvs	r6, [sp, #-3425]!	; 0xfffff29f
  44:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
  48:	646f432f 	strbtvs	r4, [pc], #-815	; 50 <startup-0x1fffffb0>
  4c:	74694c65 	strbtvc	r4, [r9], #-3173	; 0xfffff39b
  50:	656b2f65 	strbvs	r2, [fp, #-3941]!	; 0xfffff09b
  54:	64617079 	strbtvs	r7, [r1], #-121	; 0xffffff87
  58:	6174732f 	cmnvs	r4, pc, lsr #6
  5c:	70757472 	rsbsvc	r7, r5, r2, ror r4
  60:	7300632e 	movwvc	r6, #814	; 0x32e
  64:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  68:	6b007075 	blvs	1c244 <startup-0x1ffe3dbc>
  6c:	61707965 	cmnvs	r0, r5, ror #18
  70:	6e695f64 	cdpvs	15, 6, cr5, cr9, cr4, {3}
  74:	67655300 	strbvs	r5, [r5, -r0, lsl #6]!
  78:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
  7c:	654b0073 	strbvs	r0, [fp, #-115]	; 0xffffff8d
  80:	6c615679 	stclvs	6, cr5, [r1], #-484	; 0xfffffe1c
  84:	00736575 	rsbseq	r6, r3, r5, ror r5
  88:	20554e47 	subscs	r4, r5, r7, asr #28
  8c:	20393943 	eorscs	r3, r9, r3, asr #18
  90:	2e322e37 	mrccs	14, 1, r2, cr2, cr7, {1}
  94:	30322031 	eorscc	r2, r2, r1, lsr r0
  98:	39303731 	ldmdbcc	r0!, {r0, r4, r5, r8, r9, sl, ip, sp}
  9c:	28203430 	stmdacs	r0!, {r4, r5, sl, ip, sp}
  a0:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  a4:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  a8:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  ac:	6d652f4d 	stclvs	15, cr2, [r5, #-308]!	; 0xfffffecc
  b0:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
  b4:	372d6465 	strcc	r6, [sp, -r5, ror #8]!
  b8:	6172622d 	cmnvs	r2, sp, lsr #4
  bc:	2068636e 	rsbcs	r6, r8, lr, ror #6
  c0:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  c4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  c8:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
  cc:	5d343032 	ldcpl	0, cr3, [r4, #-200]!	; 0xffffff38
  d0:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
  d4:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
  d8:	616d2d20 	cmnvs	sp, r0, lsr #26
  dc:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  e0:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  e4:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  e8:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  ec:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  f0:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  f4:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  f8:	20672d20 	rsbcs	r2, r7, r0, lsr #26
  fc:	20304f2d 	eorscs	r4, r0, sp, lsr #30
 100:	6474732d 	ldrbtvs	r7, [r4], #-813	; 0xfffffcd3
 104:	3939633d 	ldmdbcc	r9!, {r0, r2, r3, r4, r5, r8, r9, sp, lr}
 108:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
 10c:	5f646170 	svcpl	0x00646170
 110:	0074756f 	rsbseq	r7, r4, pc, ror #10
 114:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 118:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
 11c:	61686320 	cmnvs	r8, r0, lsr #6
 120:	3a5a0072 	bcc	16802f0 <startup-0x1e97fd10>
 124:	5c55475c 	mrrcpl	7, 5, r4, r5, cr12
 128:	31544944 	cmpcc	r4, r4, asr #18
 12c:	2d203135 	stfcss	f3, [r0, #-212]!	; 0xffffff2c
 130:	73614d20 	cmnvc	r1, #32, 26	; 0x800
 134:	6f6e696b 	svcvs	0x006e696b
 138:	6e656972 			; <UNDEFINED> instruction: 0x6e656972
 13c:	61726574 	cmnvs	r2, r4, ror r5
 140:	72502064 	subsvc	r2, r0, #100	; 0x64
 144:	6172676f 	cmnvs	r2, pc, ror #14
 148:	72656d6d 	rsbvc	r6, r5, #6976	; 0x1b40
 14c:	5c676e69 	stclpl	14, cr6, [r7], #-420	; 0xfffffe5c
 150:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 154:	6574694c 	ldrbvs	r6, [r4, #-2380]!	; 0xfffff6b4
 158:	79656b5c 	stmdbvc	r5!, {r2, r3, r4, r6, r8, r9, fp, sp, lr}^
 15c:	00646170 	rsbeq	r6, r4, r0, ror r1
 160:	5674756f 	ldrbtpl	r7, [r4], -pc, ror #10
 164:	6d006c61 	stcvs	12, cr6, [r0, #-388]	; 0xfffffe7c
 168:	006e6961 	rsbeq	r6, lr, r1, ror #18
 16c:	3774756f 	ldrbcc	r7, [r4, -pc, ror #10]!
 170:	00676573 	rsbeq	r6, r7, r3, ror r5
 174:	70736964 	rsbsvc	r6, r3, r4, ror #18
 178:	5f79616c 	svcpl	0x0079616c
 17c:	0074756f 	rsbseq	r7, r4, pc, ror #10
 180:	5f707061 	svcpl	0x00707061
 184:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d37 	eorscc	r2, r2, r7, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3720 	eorcc	r3, lr, #32, 14	; 0x800000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	30373130 	eorscc	r3, r7, r0, lsr r1
  48:	20343039 	eorscs	r3, r4, r9, lsr r0
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff30e <KeyValues+0xdffff18e>
  5c:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
  60:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  64:	72622d37 	rsbvc	r2, r2, #3520	; 0xdc0
  68:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  6c:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  70:	6f697369 	svcvs	0x00697369
  74:	3532206e 	ldrcc	r2, [r2, #-110]!	; 0xffffff92
  78:	34303235 	ldrtcc	r3, [r0], #-565	; 0xfffffdcb
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	0000002c 	andeq	r0, r0, ip, lsr #32
  30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  34:	41018e02 	tstmi	r1, r2, lsl #28
  38:	0000070d 	andeq	r0, r0, sp, lsl #14
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	2000003c 	andcs	r0, r0, ip, lsr r0
  48:	000000c8 	andeq	r0, r0, r8, asr #1
  4c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  50:	41018e02 	tstmi	r1, r2, lsl #28
  54:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  58:	00000007 	andeq	r0, r0, r7
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	20000104 	andcs	r0, r0, r4, lsl #2
  68:	00000048 	andeq	r0, r0, r8, asr #32
  6c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  70:	41018e02 	tstmi	r1, r2, lsl #28
  74:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
  78:	00000007 	andeq	r0, r0, r7
  7c:	00000018 	andeq	r0, r0, r8, lsl r0
  80:	00000000 	andeq	r0, r0, r0
  84:	2000014c 	andcs	r0, r0, ip, asr #2
  88:	00000016 	andeq	r0, r0, r6, lsl r0
  8c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  90:	41018e02 	tstmi	r1, r2, lsl #28
  94:	0000070d 	andeq	r0, r0, sp, lsl #14
